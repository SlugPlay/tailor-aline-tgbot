from aiogram import types, Router, F
from aiogram.filters import StateFilter
from aiogram.fsm.context import FSMContext
from aiogram.types import ContentType, Message
from tailor_aline_tgbot.stateMachine import *
from tailor_aline_tgbot.adminUser import acsess_files
from tailor_aline_tgbot.func import check
from tailor_aline_tgbot.globall import *
from tailor_aline_tgbot import db
from tailor_aline_tgbot.photos import photo_1, photo_2, photo_8, photo_9, \
    photo_10, photo_11, \
    photo_12, photo_13, photo_14, photo_15, photo_17, photo_18, photo_19, photo_20, photo_16

router = Router()


@router.message(StateFilter(UserMenu.top))
async def under17(message: types.Message, state: FSMContext):
    global merki_up
    if str(message.text).lower() == '–∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å—Ç–∞—Ä—ã–µ –º–µ—Ä–∫–∏':
        await message.answer('–ó–∞–≥—Ä—É–∑–∏—Ç–µ –æ–¥–Ω–æ-–¥–≤–∞ —Ñ–æ—Ç–æ –∂–µ–ª–∞–µ–º–æ–≥–æ –∏–∑–¥–µ–ª–∏—è', reply_markup=types.ReplyKeyboardRemove())
        await state.set_state(UserMenu.orderTop)
    elif str(message.text).lower() == '—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π —Ä–∞–∑–º–µ—Ä':
        await message.answer('–ó–∞–≥—Ä—É–∑–∏—Ç–µ –æ–¥–Ω–æ-–¥–≤–∞ —Ñ–æ—Ç–æ –∂–µ–ª–∞–µ–º–æ–≥–æ –∏–∑–¥–µ–ª–∏—è', reply_markup=types.ReplyKeyboardRemove())
        await state.set_state(UserMenu.orderTop)
    elif str(message.text).lower() == '—Å–¥–µ–ª–∞–µ–º –º–µ—Ä–∫–∏':
        merki_up = ''
        kb = [
            [types.KeyboardButton(text="–ù–∞—á–∞—Ç—å")],
            [types.KeyboardButton(text="–ú–µ–Ω—é")],
        ]
        keyboard = types.ReplyKeyboardMarkup(keyboard=kb, resize_keyboard=True)
        await message.answer(
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏–∑–º–µ—Ä—å—Ç–µ —Ñ–∏–≥—É—Ä—É —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ –∏–ª–∏ –ø—Ä–∏ –ø–æ–º–æ—â–∏ –¥—Ä—É–≥–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞, —Å–ª–µ–¥—É—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏.",
            reply_markup=keyboard)
        await state.set_state(UserMenu.orderTopVse)
    elif str(message.text).lower() == '–Ω–∞–∑–∞–¥':
        kb = [
            [types.KeyboardButton(text="–•–æ—á—É –∑–∞–∫–∞–∑–∞—Ç—å –≤–µ—Ä—Ö (–ü–ª–∞—Ç—å–µ, –±–ª—É–∑–∫–∞, –∂–∞–∫–µ—Ç, —Ä—É–±–∞—à–∫–∞)")],
            [types.KeyboardButton(text="–•–æ—á—É –∑–∞–∫–∞–∑–∞—Ç—å –Ω–∏–∑ –Æ–±–∫–∞")],
            [types.KeyboardButton(text="–•–æ—á—É –∑–∞–∫–∞–∑–∞—Ç—å –Ω–∏–∑ –ë—Ä—é–∫–∏")],
            [types.KeyboardButton(text="–°–≤—è–∑–∞—Ç—å—Å—è —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º")],
            [types.KeyboardButton(text="–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –∑–∞–Ω–æ–≤–æ")]

        ]
        keyboard = types.ReplyKeyboardMarkup(keyboard=kb, resize_keyboard=True)
        await message.answer("–ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∑–∞–∫–∞–∑–∞—Ç—å?", reply_markup=keyboard)
        await state.set_state(UserMenu.menu)


@router.message(StateFilter(UserMenu.orderTopVse))
async def under18(message: types.Message, state: FSMContext):
    if str(message.text).lower() == '–º–µ–Ω—é':
        kb = [
            [types.KeyboardButton(text="–•–æ—á—É –∑–∞–∫–∞–∑–∞—Ç—å –≤–µ—Ä—Ö (–ü–ª–∞—Ç—å–µ, –±–ª—É–∑–∫–∞, –∂–∞–∫–µ—Ç, —Ä—É–±–∞—à–∫–∞)")],
            [types.KeyboardButton(text="–•–æ—á—É –∑–∞–∫–∞–∑–∞—Ç—å –Ω–∏–∑ –Æ–±–∫–∞")],
            [types.KeyboardButton(text="–•–æ—á—É –∑–∞–∫–∞–∑–∞—Ç—å –Ω–∏–∑ –ë—Ä—é–∫–∏")],
            [types.KeyboardButton(text="–°–≤—è–∑–∞—Ç—å—Å—è —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º")],
            [types.KeyboardButton(text="–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –∑–∞–Ω–æ–≤–æ")]
        ]
        keyboard = types.ReplyKeyboardMarkup(keyboard=kb, resize_keyboard=True)
        await message.answer("–ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∑–∞–∫–∞–∑–∞—Ç—å?", reply_markup=keyboard)
        await state.set_state(UserMenu.menu)
    else:
        await message.answer_photo(photo_17, '–û–±—Ö–≤–∞—Ç —à–µ–∏', reply_markup=types.ReplyKeyboardRemove())
        await state.set_state(UserSize.step5)


@router.message(StateFilter(UserSize.step5))
async def under19(message: types.Message, state: FSMContext):
    global merki_up

    if check(str(message.text), 'num'):
        merki_up += str(message.text)
        merki_up += '/'
        await message.answer_photo(photo_10, '–û–±—Ö–≤–∞—Ç –≥—Ä—É–¥–∏ 1')
        await state.set_state(UserSize.step6)
    else:
        await message.answer('ü•∫–ù–µ –ø–æ—Ö–æ–∂–µ –Ω–∞ –≤–∞—à–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑')
        await state.set_state(UserSize.step5)


@router.message(StateFilter(UserSize.step6))
async def under20(message: types.Message, state: FSMContext):
    global merki_up

    if check(str(message.text), 'num'):
        merki_up += str(message.text)
        merki_up += '/'
        await message.answer_photo(photo_12, '–û–±—Ö–≤–∞—Ç –≥—Ä—É–¥–∏ 2')
        await state.set_state(UserSize.step7)
    else:
        await message.answer('ü•∫–ù–µ –ø–æ—Ö–æ–∂–µ –Ω–∞ –≤–∞—à–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑')
        await state.set_state(UserSize.step6)


@router.message(StateFilter(UserSize.step7))
async def under21(message: types.Message, state: FSMContext):
    global merki_up

    if check(str(message.text), 'num'):
        merki_up += str(message.text)
        merki_up += '/'
        await message.answer_photo(photo_13, '–û–±—Ö–≤–∞—Ç –≥—Ä—É–¥–∏ 3')
        await state.set_state(UserSize.step8)
    else:
        await message.answer('ü•∫–ù–µ –ø–æ—Ö–æ–∂–µ –Ω–∞ –≤–∞—à–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑')
        await state.set_state(UserSize.step7)


@router.message(StateFilter(UserSize.step8))
async def under22(message: types.Message, state: FSMContext):
    global merki_up

    if check(str(message.text), 'num'):
        merki_up += str(message.text)
        merki_up += '/'
        await message.answer_photo(photo_18, '–¶–µ–Ω—Ç—Ä –≥—Ä—É–¥–∏')
        await state.set_state(UserSize.step9)
    else:
        await message.answer('ü•∫–ù–µ –ø–æ—Ö–æ–∂–µ –Ω–∞ –≤–∞—à–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑')
        await state.set_state(UserSize.step8)


@router.message(StateFilter(UserSize.step9))
async def under23(message: types.Message, state: FSMContext):
    global merki_up

    if check(str(message.text), 'num'):
        merki_up += str(message.text)
        merki_up += '/'
        await message.answer_photo(photo_2, '–í—ã—Å–æ—Ç–∞ –≥—Ä—É–¥–∏')
        await state.set_state(UserSize.step10)
    else:
        await message.answer('ü•∫–ù–µ –ø–æ—Ö–æ–∂–µ –Ω–∞ –≤–∞—à–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑')
        await state.set_state(UserSize.step9)


@router.message(StateFilter(UserSize.step10))
async def under24(message: types.Message, state: FSMContext):
    global merki_up

    if check(str(message.text), 'num'):
        merki_up += str(message.text)
        merki_up += '/'
        await message.answer_photo(photo_19, '–®–∏—Ä–∏–Ω–∞ –ø–ª–µ—á–∞')
        await state.set_state(UserSize.step11)
    else:
        await message.answer('ü•∫–ù–µ –ø–æ—Ö–æ–∂–µ –Ω–∞ –≤–∞—à–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑')
        await state.set_state(UserSize.step10)


@router.message(StateFilter(UserSize.step11))
async def under25(message: types.Message, state: FSMContext):
    global merki_up

    if check(str(message.text), 'num'):
        merki_up += str(message.text)
        merki_up += '/'
        await message.answer_photo(photo_15, '–û–±—Ö–≤–∞—Ç –ø–ª–µ—á–∞')
        await state.set_state(UserSize.step12)
    else:
        await message.answer('ü•∫–ù–µ –ø–æ—Ö–æ–∂–µ –Ω–∞ –≤–∞—à–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑')
        await state.set_state(UserSize.step11)


@router.message(StateFilter(UserSize.step12))
async def under26(message: types.Message, state: FSMContext):
    global merki_up

    if check(str(message.text), 'num'):
        merki_up += str(message.text)
        merki_up += '/'
        await message.answer_photo(photo_14, '–û–±—Ö–≤–∞—Ç –∑–∞–ø—è—Å—Ç—å—è')
        await state.set_state(UserSize.step13)
    else:
        await message.answer('ü•∫–ù–µ –ø–æ—Ö–æ–∂–µ –Ω–∞ –≤–∞—à–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑')
        await state.set_state(UserSize.step12)


@router.message(StateFilter(UserSize.step13))
async def under27(message: types.Message, state: FSMContext):
    global merki_up

    if check(str(message.text), 'num'):
        merki_up += str(message.text)
        merki_up += '/'
        await message.answer_photo(photo_20, '–î–ª–∏–Ω–∞ —Ä—É–∫–∞–≤–∞')
        await state.set_state(UserSize.step14)
    else:
        await message.answer('ü•∫–ù–µ –ø–æ—Ö–æ–∂–µ –Ω–∞ –≤–∞—à–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑')
        await state.set_state(UserSize.step13)


@router.message(StateFilter(UserSize.step14))
async def under28(message: types.Message, state: FSMContext):
    global merki_up

    if check(str(message.text), 'num'):
        merki_up += str(message.text)
        merki_up += '/'
        await message.answer_photo(photo_16, '–û–±—Ö–≤–∞—Ç —Ç–∞–ª–∏–∏')
        await state.set_state(UserSize.step15)
    else:
        await message.answer('ü•∫–ù–µ –ø–æ—Ö–æ–∂–µ –Ω–∞ –≤–∞—à–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑')
        await state.set_state(UserSize.step14)


@router.message(StateFilter(UserSize.step15))
async def under29(message: types.Message, state: FSMContext):
    global merki_up

    if check(str(message.text), 'num'):
        merki_up += str(message.text)
        merki_up += '/'
        await message.answer_photo(photo_9, '–û–±—Ö–≤–∞—Ç –±–µ–¥–µ—Ä')
        await state.set_state(UserSize.step16)
    else:
        await message.answer('ü•∫–ù–µ –ø–æ—Ö–æ–∂–µ –Ω–∞ –≤–∞—à–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑')
        await state.set_state(UserSize.step15)


@router.message(StateFilter(UserSize.step16))
async def under30(message: types.Message, state: FSMContext):
    global merki_up

    if check(str(message.text), 'num'):
        merki_up += str(message.text)
        merki_up += '/'
        await message.answer_photo(photo_1, '–í—ã—Å–æ—Ç–∞ –±–µ–¥–µ—Ä')
        await state.set_state(UserSize.step17)
    else:
        await message.answer('ü•∫–ù–µ –ø–æ—Ö–æ–∂–µ –Ω–∞ –≤–∞—à–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑')
        await state.set_state(UserSize.step16)


@router.message(StateFilter(UserSize.step17))
async def under31(message: types.Message, state: FSMContext):
    global merki_up

    if check(str(message.text), 'num'):
        merki_up += str(message.text)
        merki_up += '/'
        await message.answer_photo(photo_11, '–®–∏—Ä–∏–Ω–∞ —Å–ø–∏–Ω—ã')
        await state.set_state(UserSize.step18)
    else:
        await message.answer('ü•∫–ù–µ –ø–æ—Ö–æ–∂–µ –Ω–∞ –≤–∞—à–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑')
        await state.set_state(UserSize.step17)


@router.message(StateFilter(UserSize.step18))
async def under32(message: types.Message, state: FSMContext):
    global merki_up

    if check(str(message.text), 'num'):
        merki_up += str(message.text)
        merki_up += '/'
        await message.answer_photo(photo_8, '–î–ª–∏–Ω–∞ —Å–ø–∏–Ω—ã –¥–æ —Ç–∞–ª–∏–∏')
        await state.set_state(UserSize.step19)
    else:
        await message.answer('ü•∫–ù–µ –ø–æ—Ö–æ–∂–µ –Ω–∞ –≤–∞—à–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑')
        await state.set_state(UserSize.step18)


@router.message(StateFilter(UserSize.step19))
async def under33(message: types.Message, state: FSMContext):
    global merki_up

    if check(str(message.text), 'num'):
        merki_up += str(message.text)
        merki_up += '/'
        await message.answer_photo(photo_8, '–î–ª–∏–Ω–∞ –ø–µ—Ä–µ–¥–∞ –¥–æ —Ç–∞–ª–∏–∏')
        await state.set_state(UserSize.step20)
    else:
        await message.answer('ü•∫–ù–µ –ø–æ—Ö–æ–∂–µ –Ω–∞ –≤–∞—à–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑')
        await state.set_state(UserSize.step19)


@router.message(StateFilter(UserSize.step20))
async def under34(message: types.Message, state: FSMContext):
    global merki_up

    if check(str(message.text), 'num'):
        merki_up += str(message.text)
        merki_up += '/'
        await message.answer_photo(photo_8, '–î–ª–∏–Ω–∞ –∏–∑–¥–µ–ª–∏—è')
        await state.set_state(UserSize.step21)
    else:
        await message.answer('ü•∫–ù–µ –ø–æ—Ö–æ–∂–µ –Ω–∞ –≤–∞—à–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑')
        await state.set_state(UserSize.step20)


@router.message(StateFilter(UserSize.step21))
async def under35(message: types.Message, state: FSMContext):
    global merki_up

    if check(str(message.text), 'num'):
        merki_up += str(message.text)
        await message.answer('–ó–∞–≥—Ä—É–∑–∏—Ç–µ –æ–¥–Ω–æ-–¥–≤–∞ —Ñ–æ—Ç–æ –∂–µ–ª–∞–µ–º–æ–≥–æ –∏–∑–¥–µ–ª–∏—è')
        await state.set_state(UserSize.step22)
    else:
        await message.answer('ü•∫–ù–µ –ø–æ—Ö–æ–∂–µ –Ω–∞ –≤–∞—à–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑')
        await state.set_state(UserSize.step21)


@router.message(StateFilter(UserSize.step22),
                F.content_type.in_([ContentType.PHOTO, ContentType.VIDEO, ContentType.AUDIO, ContentType.DOCUMENT]))
async def under36(message: types.Message, state: FSMContext, album: list[Message]):
    global merki_up, all_user_data

    flag_unknown_media = False
    media_group = []
    for msg in album:
        if msg.photo:
            file_id = msg.photo[-1].file_id
            media_group.append(str(file_id) + '/pic')
        elif str(msg.document.mime_type) in acsess_files:
            file_id = msg.document.file_id
            media_group.append(str(file_id) + '/doc')
        else:
            flag_unknown_media = True
    if flag_unknown_media:
        await message.answer(
            'ü•∫–ù–µ –ø–æ—Ö–æ–∂–µ –Ω–∞ –Ω—É–∂–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç. –ó–∞–≥—Ä—É–∑–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é –≤ –æ–±—ã—á–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ —Ç–µ–ª–ª–µ–≥—Ä–∞–º–º–∞ –∏–ª–∏ –≤ –≤–∏–¥–µ —Ñ–∞–π–ª–∞ —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ–º jpg/jpeg/png')
        media_group = []
        await state.set_state(UserSize.step22)
    else:
        await message.answer('–§–æ—Ç–æ –ø–æ–ª—É—á–µ–Ω—ã')
        merki_up += str(message.text)
        db.input_merki(merki_up, 'up', global_phone_number)
        all_user_data = db.get_user(global_phone_number)
        # –ü–µ—Ä–µ–∞–¥—Ä–µ—Å–∞—Ü–∏—è –∞–¥–º–∏–Ω—É !!!!!!!!!!!!!
        # –ü–µ—Ä–µ–∞–¥—Ä–µ—Å–∞—Ü–∏—è –∞–¥–º–∏–Ω—É !!!!!!!!!!!!!
        # –ü–µ—Ä–µ–∞–¥—Ä–µ—Å–∞—Ü–∏—è –∞–¥–º–∏–Ω—É !!!!!!!!!!!!!
        # –ü–µ—Ä–µ–∞–¥—Ä–µ—Å–∞—Ü–∏—è –∞–¥–º–∏–Ω—É !!!!!!!!!!!!!
        # –ü–µ—Ä–µ–∞–¥—Ä–µ—Å–∞—Ü–∏—è –∞–¥–º–∏–Ω—É !!!!!!!!!!!!!
        kb = [
            [types.KeyboardButton(text="–í –º–µ–Ω—é")],
        ]
        keyboard = types.ReplyKeyboardMarkup(keyboard=kb, resize_keyboard=True)
        await message.answer('–ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –í–∞—Å! –° –≤–∞–º–∏ —Å–≤—è–∂–µ—Ç—Å—è –Ω–∞—à –º–µ–Ω–µ–¥–∂–µ—Ä –≤ —Ç–µ—á–µ–Ω–∏–∏ 1 —á–∞—Å–∞.', reply_markup=keyboard)
        await state.set_state(UserState.ageUser)


@router.message(StateFilter(UserMenu.orderTop),
                F.content_type.in_([ContentType.PHOTO, ContentType.VIDEO, ContentType.AUDIO, ContentType.DOCUMENT]))
async def under37(message: types.Message, state: FSMContext, album: list[Message]):
    flag_unknown_media = False
    media_group = []
    for msg in album:
        if msg.photo:
            file_id = msg.photo[-1].file_id
            media_group.append(str(file_id) + '/pic')
        elif str(msg.document.mime_type) in acsess_files:
            file_id = msg.document.file_id
            media_group.append(str(file_id) + '/doc')
        else:
            flag_unknown_media = True
    if flag_unknown_media:
        await message.answer(
            'ü•∫–ù–µ –ø–æ—Ö–æ–∂–µ –Ω–∞ –Ω—É–∂–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç. –ó–∞–≥—Ä—É–∑–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é –≤ –æ–±—ã—á–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ —Ç–µ–ª–ª–µ–≥—Ä–∞–º–º–∞ –∏–ª–∏ –≤ –≤–∏–¥–µ —Ñ–∞–π–ª–∞ —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ–º jpg/jpeg/png')
        media_group = []
        await state.set_state(UserMenu.orderTop)
    else:
        await message.answer('–§–æ—Ç–æ –ø–æ–ª—É—á–µ–Ω—ã')
        # –ü–µ—Ä–µ–∞–¥—Ä–µ—Å–∞—Ü–∏—è –∞–¥–º–∏–Ω—É !!!!!!!!!!!!!
        # –ü–µ—Ä–µ–∞–¥—Ä–µ—Å–∞—Ü–∏—è –∞–¥–º–∏–Ω—É !!!!!!!!!!!!!
        # –ü–µ—Ä–µ–∞–¥—Ä–µ—Å–∞—Ü–∏—è –∞–¥–º–∏–Ω—É !!!!!!!!!!!!!
        # –ü–µ—Ä–µ–∞–¥—Ä–µ—Å–∞—Ü–∏—è –∞–¥–º–∏–Ω—É !!!!!!!!!!!!!
        # –ü–µ—Ä–µ–∞–¥—Ä–µ—Å–∞—Ü–∏—è –∞–¥–º–∏–Ω—É !!!!!!!!!!!!!
        kb = [
            [types.KeyboardButton(text="–í –º–µ–Ω—é")],
        ]
        keyboard = types.ReplyKeyboardMarkup(keyboard=kb, resize_keyboard=True)
        await message.answer('–ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –í–∞—Å! –° –≤–∞–º–∏ —Å–≤—è–∂–µ—Ç—Å—è –Ω–∞—à –º–µ–Ω–µ–¥–∂–µ—Ä –≤ —Ç–µ—á–µ–Ω–∏–∏ 1 —á–∞—Å–∞.',
                             reply_markup=keyboard)
        await state.set_state(UserState.ageUser)
